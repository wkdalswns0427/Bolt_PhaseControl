# used to create the object
name: Bolt10

physics_engine: ${..physics_engine} # 'physx'

env:
  numEnvs: ${resolve_default:2048,${...num_envs}}
  numObservations: 42
  numActions: 10
  envSpacing: 3.  # [m]
  enableDebugVis: False

  terrain:
    terrainType: plane # none, plane, or trimesh
    staticFriction: 1.4  # [-]
    dynamicFriction: 1.4  # [-]
    restitution: 0.        # [-]
    # rough terrain only:
    curriculum: true
    maxInitMapLevel: 0
    mapLength: 8.
    mapWidth: 8.
    numLevels: 10
    numTerrains: 20
    # terrain types: [smooth slope, rough slope, stairs up, stairs down, discrete]
    terrainProportions: [0.1, 0.1, 0.35, 0.25, 0.2]
    # tri mesh only:
    slopeTreshold: 0.5

  baseInitState:
    # robot height 0.571 at full stretch
    pos: [0.0, 0.0, 0.58] # x,y,z [m]
    rot: [0.0, 0.0, 0.0, 1.0] # x,y,z,w [quat]
    vLinear: [0.0, 0.0, 0.0]  # x,y,z [m/s]
    vAngular: [0.0, 0.0, 0.0]  # x,y,z [rad/s]

  randomCommandVelocityRanges:
    # train
    linear_x: [0.5, 0.5] # min max [m/s]
    linear_y: [0.0, 0.0]   # min max [m/s]
    yaw: [-0.0, 0.0]    # min max [rad/s] # [-0.0, 0.0]

  control:
    # PD Drive parameters:
    stiffness: 5.6 # [N*m/rad]
    damping: 2.5    # [N*m*s/rad]
    # action scale: target angle = actionScale * action + defaultAngle
    actionScale: 1.0 # 1.
    # decimation: Number of control action updates @ sim DT per policy DT
    decimation: 4 # 40hz
    # controlFrequencyInv: 1 # 60 Hz

  defaultJointAngles:  # = target angles when action = 0.0
    L_HipYaw_Joint: 0.0     # [rad]
    L_HipRoll_Joint: -0.1    # [rad]
    L_HipPitch_Joint: -0.15  # [rad]
    L_KneePitch_Joint: 0.4  # [rad]
    L_AnklePitch_Joint: -0.25 # [rad]
    R_HipYaw_Joint: 0.    # [rad]
    R_HipRoll_Joint: -0.1    # [rad]
    R_HipPitch_Joint: -0.15  # [rad]
    R_KneePitch_Joint: 0.4  # [rad]
    R_AnklePitch_Joint: -0.25 # [rad]

  urdfAsset:
    file: "urdf/bolt10/urdf/bolt10.urdf"
    footName: Foot # SHANK if collapsing fixed joint, FOOT otherwise
    kneeName: Upper
    collapseFixedJoints: True
    fixBaseLink: false
    defaultDofDriveMode: 4 # see GymDofDriveModeFlags (0 is none, 1 is pos tgt, 2 is vel tgt, 4 effort)

  learn:
    termination_height: 0.35
    allowKneeContacts: True 
    
    #negative for penalty, positive for reward
    terminalReward: 0.0
    linearVelocityXYRewardScale: 10.0
    linearVelocityZRewardScale: 0.0 # neg
    angularVelocityXYRewardScale: -0.5 # neg
    angularVelocityZRewardScale: -0.0 
    orientationRewardScale: -1.0 # neg
    torqueRewardScale: -0.0001 # neg
    jointAccRewardScale: -0.005 # neg

    baseHeightRewardScaleH: -1.0 # neg
    baseHeightRewardScaleL: -0.0 # neg 0set test 

    feetAirTimeRewardScale: 1.0
    kneeCollisionRewardScale: -1.0 # neg
    feetStumbleRewardScale: -0.0 # neg
    actionRateRewardScale: -0.01 # neg
    hipRewardScale: -0.0
    noflyRewardScale: 1.0 
    ####New#####
    # forwardRewardScale: 2.0
    # balanceRewardScale: 2.0
    # kneeangleRewardScale: -2.0
    symmetryRewardScale: -1.0

    # normalization
    linearVelocityScale: 1.0 # 2.0
    angularVelocityScale: 0.0 # 0.0
    dofPositionScale: 1.0
    dofVelocityScale: 0.05
    heightMeasurementScale: 1.0 # 5.0

    # noise 
    addNoise: false
    noiseLevel: 1.0 # scales other values
    dofPositionNoise: 0.01
    dofVelocityNoise: 1.5
    linearVelocityNoise: 0.1
    angularVelocityNoise: 0.2
    gravityNoise: 0.05
    heightMeasurementNoise: 0.06

    #randomization
    randomizeFriction: false
    frictionRange: [0.5, 1.25]
    pushRobots: false
    pushInterval_s: 15

    # episode length in seconds
    episodeLength_s: 20

  # viewer cam:
  viewer:
    refEnv: 0
    pos: [-1, -1, 1]  # [m]
    lookat: [1., 1, 0.9]  # [m]

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False

sim:
  dt: 0.005
  substeps: 1
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"} # True
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 1
    contact_offset: 0.01 #0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.1
    max_depenetration_velocity: 1.0 #100.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False
  randomization_params:
    frequency: 600   # Define how many environment steps between generating new randomizations
    observations:
      range: [0, .002] # range for the white noise
      operation: "additive"
      distribution: "gaussian"
    actions:
      range: [0., .02]
      operation: "additive"
      distribution: "gaussian"
    sim_params: 
      gravity:
        range: [0, 0.4]
        operation: "additive"
        distribution: "gaussian"
        schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
        schedule_steps: 3000
